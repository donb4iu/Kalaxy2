name: Kalaxy2 automated documentation generation and publication
on:
  push:
    branches: [ main ]
jobs:
  doc:
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    runs-on: ubuntu-latest 
    steps:
    - uses: actions/checkout@v4
      id: Detected_push

    - name: Generate Daux webpages
      uses: addnab/docker-run-action@v3
      id: Generating_webpages_from_commit
      with:
        image: daux/daux.io:latest
        options: |
          --rm 
          -v ${{ github.workspace }}:/build
          -w /build
        run: /daux/bin/daux generate -s markdown -d docs

    - name: Commit generated webpages
      id: Committing_webpage_changes
      run: |
        git config --local user.email "dbuddenbaum@gmail.com"
        git config --local user.name "donb4iu"
        git add -A
        git commit -a -m 'commit generated daux.io generated docs to repository'

    - name: Force push generated webpages back to the docs directory
      uses: ad-m/github-push-action@master
      id: Pushing_webpage_changes
      with:
        github_token: ${{ secrets.API_TOKEN_GITHUB }}
        branch: main

    - name: Publish webpages to donb4iu.github.io
      uses: cpina/github-action-push-to-another-repository@main
      id: Publishing_to_gitpages
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: 'docs'
        target-directory: 'docs'
        destination-github-username: 'donb4iu'
        destination-repository-name: 'donb4iu.github.io'
        target-branch: 'main'
        commit-message: 'DauxIO webpage commit from Kalaxy2'
        user-email: dbuddenbaum@gmail.com

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      id: Logging_into_docker_hub
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
    - name: Build and push image to donb4iu/mynginx_docs
      uses: docker/build-push-action@v6
      id: Build_and_Push_Docker_Image
      with:
          platforms: linux/amd64,linux/arm64
          file: yaml/nginx-docs/k8s-doc-to-nginx/nginx/Dockerfile          
          push: true
          tags: donb4iu/mynginx_docs:${{ github.sha }}

    - name: Update values.yaml
      id: Update_Helm_Values_File
      run: |
        cd yaml/nginx-docs/k8s-doc-to-nginx
        sed -i 's|APP_VERSION:.*|APP_VERSION: '${{ github.sha }}'|' values.yaml 
        git config --global user.name 'donb4iu'
        git config --global user.email 'dbuddenbaum@gmail.com'
        git add values.yaml
        git commit -m "Update values.yaml"
        git push

    - name: Send Slack message
      uses: act10ns/slack@v2
      with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
      if: always()

  resume:
      if: ${{ always() }}
      needs: [doc]
      env:
         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      runs-on: ubuntu-latest 
      steps:
      - uses: actions/checkout@v4
        id: Detected_push

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        id: Logging_into_docker_hub
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push image to donb4iu/mynginx_resume
        uses: docker/build-push-action@v6
        id: Build_and_Push_Docker_Image
        with:
          platforms: linux/amd64,linux/arm64
          file: yaml/nginx-docs/k8s-resume-to-nginx/nginx/Dockerfile          
          push: true
          tags: donb4iu/mynginx_resume:${{ github.sha }}

      - name: Update values.yaml
        id: Update_Helm_Values_File
        run: |
          git config --global user.name 'donb4iu'
          git config --global user.email 'dbuddenbaum@gmail.com'
          git pull
          cd yaml/nginx-docs/k8s-resume-to-nginx
          sed -i 's|APP_VERSION:.*|APP_VERSION: '${{ github.sha }}'|' values.yaml 
          git add values.yaml
          git commit -m "Update values.yaml"
          git push

      - name: Send Slack message
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()

  shelloperator:
      if: ${{ always() }}
      needs: [doc, resume]
      env:
         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      runs-on: ubuntu-latest 
      steps:
      - uses: actions/checkout@v4
        id: Detected_push

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        id: Logging_into_docker_hub
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push image to donb4iu/shell-operator-hooks
        uses: docker/build-push-action@v6
        id: Build_and_Push_Docker_Image
        with:
          platforms: linux/amd64,linux/arm64
          file: yaml/shell_operator/documentation_operator/Dockerfile       
          push: true
          tags: donb4iu/shell-operator-hooks:${{ github.sha }}

      - name: Update values.yaml
        id: Update_Helm_Values_File
        run: |
          git config --global user.name 'donb4iu'
          git config --global user.email 'dbuddenbaum@gmail.com'
          git pull
          cd yaml/shell_operator/documentation_operator
          sed -i 's|APP_VERSION:.*|APP_VERSION: '${{ github.sha }}'|' values.yaml 
          git add values.yaml
          git commit -m "Update values.yaml"
          git push

      - name: Send Slack message
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()